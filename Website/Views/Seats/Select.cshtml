@model dynamic

@{
    ViewData["Title"] = "Seats";
}

<div class="movie-container">
    <ul class="showcase">
        <li>
            <div class="seat"></div>
            <small>N/A</small>
        </li>
        <li>
            <div class="seat selected"></div>
            <small>Selected</small>
        </li>
        <li>
            <div class="seat occupied"></div>
            <small>Occupied</small>
        </li>
    </ul>
    <form asp-controller="Seats" asp-action="Reserve" method="POST" id="form">
        <div class="seat-container">
            <div class="screen"></div>

            @for (int rows = 0; rows < Model.Rows; rows++)
            {
                <div class="row">
                    @for (int column = 0; column < Model.SeatsPerRow; column++)
                    {
                        <div class="seat" id="@rows-@column"></div>
                    }
                </div>
            }

            <p class="text">
                You have selected <span id="countSpan">0</span> seats for the total price of <span id="totalSpan">0</span> DKK
            </p>
            <button class="btn btn-primary" type="submit">Reserve</button>


        </div>
    </form>
</div>

@section Scripts
{
    <script>
        // Event for form submition with id #`form`
        // Goes trough all rows, then seats that are selected and adds a hidden input with
        // the id of that seat as value. This way te form submition can see them and add them as well
        $("#form").submit(function (eventObj) {
            let index = 0;
            document.querySelectorAll('.row .seat.selected').forEach(seat => {
                // This line adds the hidden inputs
                // the name is important. It's used to map it to what the c# Action recives
                // It looks like selectedSeats[0] because `selectedSeats` is a List<string> as
                // parameter on the Action
                $(this).append('<input type="hidden" name="selectedSeats[' + index + ']" value="' + seat.id + '" /> ');
                index++;
            });
            return true;
        });

        // Updates the selected seats <p> and increased the numberOfSeats count
        function updateSelectedCount() {
            const numberOfSeats = document.querySelectorAll('.row .seat.selected').length;
            const seatPositions = [];
            document.querySelectorAll('.row .seat.selected').forEach((seat) => {
                console.log(seat.id)
                seatPositions.push(seat.id);
            });

            //console.log(seatPositionsList)
            //seats = JSON.stringify({ 'seatPositions': seatPositionsList });

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetTotalPrice")",
                //contentType: 'application/json',
                data: { 'seatPositions': seatPositions },
                dataType: "text",
                traditional: true,
                success: function (totalPrice) {
                    console.log(totalPrice);
                    totalSpan.innerText = totalPrice;
                },
                error: function () {
                    alert('Something went wrong!');
                },
            });

            countSpan.innerText = numberOfSeats;
        }


        $(document).ready(function () {
            alert('i want to go home please')
            const container = document.querySelector('.seat-container');

            //Seat click event
            if (container != null) {
                container.addEventListener('click', e => {
                    if (e.target.classList.contains('seat') && !e.target.classList.contains('occupied')) {
                        e.target.classList.toggle('selected');
                        if (document.querySelectorAll('.row .seat.selected').length <= 8) {
                            updateSelectedCount();
                        }
                        else {
                            e.target.classList.toggle('selected');
                            alert('you mofo thats enough of fucking seats okay');
                        }
                    }
                });
            }
        }
        );
    </script>
}
